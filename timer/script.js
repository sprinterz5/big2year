const Confettiful = function(el) {
  this.el = el;
  this.containerEl = null;
  
  this.confettiFrequency = 3;
  this.confettiColors = ['#EF2964', '#00C09D', '#2D87B0', '#48485E','#EFFF1D'];
  this.confettiAnimations = ['slow', 'medium', 'fast'];
  
  this._setupElements();
  this._renderConfetti();
};

Confettiful.prototype._setupElements = function() {
  const containerEl = document.createElement('div');
  const elPosition = this.el.style.position;
  
  if (elPosition !== 'relative' || elPosition !== 'absolute') {
    this.el.style.position = 'relative';
  }
  
  containerEl.classList.add('confetti-container');
  
  this.el.appendChild(containerEl);
  
  this.containerEl = containerEl;
};

Confettiful.prototype._renderConfetti = function() {
  this.confettiInterval = setInterval(() => {
    const confettiEl = document.createElement('div');
    const confettiSize = (Math.floor(Math.random() * 3) + 7) + 'px';
    const confettiBackground = this.confettiColors[Math.floor(Math.random() * this.confettiColors.length)];
    const confettiLeft = (Math.floor(Math.random() * this.el.offsetWidth)) + 'px';
    const confettiAnimation = this.confettiAnimations[Math.floor(Math.random() * this.confettiAnimations.length)];
    
    confettiEl.classList.add('confetti', 'confetti--animation-' + confettiAnimation);
    confettiEl.style.left = confettiLeft;
    confettiEl.style.width = confettiSize;
    confettiEl.style.height = confettiSize;
    confettiEl.style.backgroundColor = confettiBackground;
    
    confettiEl.removeTimeout = setTimeout(function() {
      confettiEl.parentNode.removeChild(confettiEl);
    }, 3000);
    
    this.containerEl.appendChild(confettiEl);
  }, 25);
};

window.confettiful = new Confettiful(document.querySelector('.js-container'));

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π ‚Äî 31 –∏—é–ª—è 2023 –≥–æ–¥–∞
const startDate = new Date("July 31, 2023 00:00:00").getTime();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–Ω–µ–π —Å —É—á–µ—Ç–æ–º –≤–∏—Å–æ–∫–æ—Å–Ω—ã—Ö –≥–æ–¥–æ–≤
const calculateLeapYears = (startDate, endDate) => {
  let leapYears = 0;
  for (let year = startDate.getFullYear(); year <= endDate.getFullYear(); year++) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
    if ((year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)) {
      leapYears++;
    }
  }
  return leapYears;
};

// –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
const timerElement = document.createElement("div");
timerElement.classList.add("timer");
document.body.appendChild(timerElement);

// –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
const congratulationsMessage = document.createElement("div");
congratulationsMessage.classList.add("congratulations-message");
document.body.appendChild(congratulationsMessage);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
const updateTimer = () => {
  let now = new Date().getTime();
  let distance = now - startDate; // –í—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ —Å –Ω–∞—á–∞–ª–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π

  // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ –¥–≤—É—Ö –ª–µ—Ç
  if (distance < 2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000) {
    // –†–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π —Å —É—á–µ—Ç–æ–º –≤–∏—Å–æ–∫–æ—Å–Ω–æ–≥–æ –≥–æ–¥–∞
    let daysLeft = Math.floor((2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000 - distance) / (1000 * 60 * 60 * 24));
    let hoursLeft = Math.floor((2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000 - distance) % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
    let minutesLeft = Math.floor((2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000 - distance) % (1000 * 60 * 60) / (1000 * 60));
    let secondsLeft = Math.floor((2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000 - distance) % (1000 * 60) / 1000);

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –¥–æ 2 –ª–µ—Ç
    timerElement.innerHTML = `–î–æ 2-—Ö –ª–µ—Ç!!!!1!!111! ${daysLeft}–¥ ${hoursLeft}—á ${minutesLeft}–º ${secondsLeft}—Å.`;
    
  } else {
    // –ö–æ–≥–¥–∞ –ø—Ä–æ—à–ª–æ 2 –≥–æ–¥–∞
    let timePassed = now - (startDate + 2 * 365 * 24 * 60 * 60 * 1000 + calculateLeapYears(new Date("July 31, 2023"), new Date("July 31, 2025")) * 86400000); // –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å—á–µ—Ç —Å –¥–≤—É—Ö –ª–µ—Ç

    let daysPassed = Math.floor(timePassed / (1000 * 60 * 60 * 24));
    let hoursPassed = Math.floor((timePassed % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    let minutesPassed = Math.floor((timePassed % (1000 * 60 * 60)) / (1000 * 60));
    let secondsPassed = Math.floor((timePassed % (1000 * 60)) / 1000);

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ—à–µ–¥—à–µ–µ —Å –¥–≤—É—Ö –ª–µ—Ç
    timerElement.innerHTML = `–ü—Ä–æ—à–ª–æ —Å 2-—Ö –ª–µ—Ç: ${daysPassed}–¥ ${hoursPassed}—á ${minutesPassed}–º ${secondsPassed}—Å.`;

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
    if (!congratulationsMessage.innerHTML) {
      congratulationsMessage.innerHTML = "üéâ Happy 2 years ‚ù§Ô∏è";
      congratulationsMessage.style.display = 'block'; // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
      congratulationsMessage.classList.add('show-message'); // –ê–Ω–∏–º–∞—Ü–∏—è
    }
  }
};

// –û–±–Ω–æ–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
setInterval(updateTimer, 1000);
